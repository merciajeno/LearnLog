{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merci\\\\Downloads\\\\LearnLog\\\\frontend\\\\src\\\\components\\\\SubjectForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSubjectForm = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/add_subject\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          name: name\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n      if (res.ok) {\n        alert(\"Subject added successfully!\");\n        setName(\"\"); // reset input\n        // refresh subject list if parent passes callback\n      } else {\n        alert(\"Error adding subject\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter subject name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AddSubjectForm, \"5MlT4Gs5wyGSi8ccQjYfIzD+RJU=\", false, function () {\n  return [useParams];\n});\n_c = AddSubjectForm;\nexport default AddSubjectForm;\nvar _c;\n$RefreshReg$(_c, \"AddSubjectForm\");","map":{"version":3,"names":["useState","useParams","jsxDEV","_jsxDEV","AddSubjectForm","_s","userId","name","setName","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","user_id","data","json","console","log","ok","alert","err","error","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/merci/Downloads/LearnLog/frontend/src/components/SubjectForm.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst AddSubjectForm = () => {\r\n     const {userId} = useParams()\r\n    const [name, setName] = useState(\"\");\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await fetch(\"http://127.0.0.1:5000/add_subject\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ user_id: userId, name: name }),\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(data);\r\n\r\n            if (res.ok) {\r\n                alert(\"Subject added successfully!\");\r\n                setName(\"\"); // reset input\r\n                // refresh subject list if parent passes callback\r\n            } else {\r\n                alert(\"Error adding subject\");\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter subject name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n            />\r\n            <button type=\"submit\">Add Subject</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddSubjectForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,SAAS,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAACC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEb,MAAM;UAAEC,IAAI,EAAEA;QAAK,CAAC;MACxD,CAAC,CAAC;MAEF,MAAMa,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjB,IAAIR,GAAG,CAACY,EAAE,EAAE;QACRC,KAAK,CAAC,6BAA6B,CAAC;QACpCjB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACb;MACJ,CAAC,MAAM;QACHiB,KAAK,CAAC,sBAAsB,CAAC;MACjC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;IACtB;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAMyB,QAAQ,EAAEnB,YAAa;IAAAoB,QAAA,gBACzB1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEzB,IAAK;MACZ0B,QAAQ,EAAGvB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFpC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf,CAAC;AAAClC,EAAA,CAvCID,cAAc;EAAA,QACEH,SAAS;AAAA;AAAAuC,EAAA,GADzBpC,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}