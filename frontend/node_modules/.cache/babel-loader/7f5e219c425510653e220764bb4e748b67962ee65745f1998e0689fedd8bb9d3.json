{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merci\\\\Downloads\\\\LearnLog\\\\frontend\\\\src\\\\components\\\\LogList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogList = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const {\n    userId,\n    subjectId\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://127.0.0.1:5000/users/${userId}/subjects/${subjectId}/logs`).then(res => res.json()).then(data => setLogs(data.logs || [])).catch(err => console.error(err));\n  }, [userId, subjectId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: logs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [log.content, \" - \", new Date(log.date).toLocaleDateString()]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(LogList, \"O+GDcaF6yWh4l85iodXMx5J8VTk=\", false, function () {\n  return [useParams];\n});\n_c = LogList;\nexport default LogList;\nvar _c;\n$RefreshReg$(_c, \"LogList\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","LogList","_s","logs","setLogs","userId","subjectId","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","content","Date","date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["C:/Users/merci/Downloads/LearnLog/frontend/src/components/LogList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst LogList = () => {\r\n    const [logs, setLogs] = useState([]);\r\n    const{ userId,subjectId } = useParams();\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:5000/users/${userId}/subjects/${subjectId}/logs`)\r\n            .then(res => res.json())\r\n            .then(data => setLogs(data.logs || []))\r\n            .catch(err => console.error(err));\r\n    }, [userId, subjectId]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Logs</h3>\r\n            <ul>\r\n                {logs.map((log) => (\r\n                    <li key={log.id}>\r\n                        {log.content} - {new Date(log.date).toLocaleDateString()}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogList;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAQC,SAAS,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAK;IAAEQ,MAAM;IAACC;EAAU,CAAC,GAAGR,SAAS,CAAC,CAAC;EACvCF,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,+BAA+BF,MAAM,aAAaC,SAAS,OAAO,CAAC,CACpEE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,OAAO,CAACO,IAAI,CAACR,IAAI,IAAI,EAAE,CAAC,CAAC,CACtCS,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,CAACR,MAAM,EAAEC,SAAS,CAAC,CAAC;EAEvB,oBACIN,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbpB,OAAA;MAAAgB,QAAA,EACKb,IAAI,CAACkB,GAAG,CAAEC,GAAG,iBACVtB,OAAA;QAAAgB,QAAA,GACKM,GAAG,CAACC,OAAO,EAAC,KAAG,EAAC,IAAIC,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA,GADnDJ,GAAG,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClB,EAAA,CAtBID,OAAO;EAAA,QAEmBH,SAAS;AAAA;AAAA8B,EAAA,GAFnC3B,OAAO;AAwBb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}