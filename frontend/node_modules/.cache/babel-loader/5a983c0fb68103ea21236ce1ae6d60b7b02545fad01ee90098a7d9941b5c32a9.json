{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merci\\\\Downloads\\\\LearnLog\\\\frontend\\\\src\\\\components\\\\LogForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddLogForm = () => {\n  _s();\n  const {\n    userId,\n    subjectId\n  } = useParams();\n  const [content, setContent] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/add_log\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          subject_id: subjectId,\n          content: content\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n      if (res.ok) {\n        alert(\"Log added successfully!\");\n        setContent(\"\"); // reset input\n      } else {\n        alert(\"Error adding log details\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"What did you learn today?\",\n      value: content,\n      onChange: e => setContent(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AddLogForm, \"AY8oeysjZujpD6qgx3X1mqPBQyA=\", false, function () {\n  return [useParams];\n});\n_c = AddLogForm;\nexport default AddLogForm;\nvar _c;\n$RefreshReg$(_c, \"AddLogForm\");","map":{"version":3,"names":["useState","useParams","jsxDEV","_jsxDEV","AddLogForm","_s","userId","subjectId","content","setContent","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","user_id","subject_id","data","json","console","log","ok","alert","err","error","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/merci/Downloads/LearnLog/frontend/src/components/LogForm.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst AddLogForm = () => {\r\n    const {userId,subjectId} = useParams()\r\n    const [content, setContent] = useState(\"\");\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await fetch(\"http://127.0.0.1:5000/add_log\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ user_id: userId, subject_id:subjectId,content:content }),\r\n            });\r\n\r\n            const data = await res.json();\r\n            console.log(data);\r\n\r\n            if (res.ok) {\r\n                alert(\"Log added successfully!\");\r\n                setContent(\"\"); // reset input\r\n\r\n            } else {\r\n                alert(\"Error adding log details\");\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"What did you learn today?\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                required\r\n            />\r\n            <button type=\"submit\">Enter </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddLogForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,SAAS,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAACC,MAAM;IAACC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEd,MAAM;UAAEe,UAAU,EAACd,SAAS;UAACC,OAAO,EAACA;QAAQ,CAAC;MAClF,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjB,IAAIT,GAAG,CAACa,EAAE,EAAE;QACRC,KAAK,CAAC,yBAAyB,CAAC;QAChClB,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAEpB,CAAC,MAAM;QACHkB,KAAK,CAAC,0BAA0B,CAAC;MACrC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;IACtB;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAM2B,QAAQ,EAAEpB,YAAa;IAAAqB,QAAA,gBACzB5B,OAAA;MACI6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,2BAA2B;MACvCC,KAAK,EAAE1B,OAAQ;MACf2B,QAAQ,EAAGxB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFtC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEf,CAAC;AAACpC,EAAA,CAvCID,UAAU;EAAA,QACeH,SAAS;AAAA;AAAAyC,EAAA,GADlCtC,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}